<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on daoist1037</title>
    <link>https://daoist1037.github.io/post/</link>
    <description>Recent content in Posts on daoist1037</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 04 Jan 2023 10:46:53 +0800</lastBuildDate><atom:link href="https://daoist1037.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>100 Practice</title>
      <link>https://daoist1037.github.io/post/100-practice/</link>
      <pubDate>Wed, 04 Jan 2023 10:46:53 +0800</pubDate>
      
      <guid>https://daoist1037.github.io/post/100-practice/</guid>
      <description>1. 第1章 vim解决问题的方式 1.1. 技巧1 结识 .命令 .命令可以重复上次的修改 &amp;gt;g会增加从当前行到文档末尾处的缩进层级 每次进入插入模式也会形成一次修改。从进入插入模式的那一刻起，直到返回普通模式为止，vim会记录每一个按键操作。 .命令是一个微型的宏 1.2. 技巧2 不要自我重复 a命令在当前光标之后添加内容
a命令在当前行的结尾添加内容
1.3. 技巧3 以退为进 f{char}命令让vim查找下一处指定字符出现的位置，如果找到了，就直接把光标移动到那里
;命令会重复上次f命令所查找的字符
s命令先删除光标下的字符，然后进入插入模式
1.4. 技巧4 执行、重复、回退 @:可以重复任意ex命令
&amp;amp;重复上次的:substitute命令
目的 操作 重复 回退 做出一个修改 {edit} . u 在行内查找下一指定字符 f{char}/t{char} ; , 在行内查找上一指定字符 f{char}/t{char} ; , 在文档中查找下一处匹配项 /pattern&amp;lt;cr&amp;gt; n n 在文档中查找上一处匹配项 ?pattern&amp;lt;cr&amp;gt; n n 执行替换 :s/target/replacement &amp;amp; u 执行一系列修改 qx{changes}q @x u 1.5. 技巧五 查找并手动替换 *命令可以查找当前光标下的单词 1.6. 技巧六 结识.范式 2. 第2章 普通模式 2.1. 技巧7 停顿时请移开画笔 2.</description>
    </item>
    
  </channel>
</rss>
